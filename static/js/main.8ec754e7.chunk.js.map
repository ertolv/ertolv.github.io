{"version":3,"sources":["domain/MainFeaturedPost/index.tsx","domain/FeaturedPost/index.tsx","domain/JObject/index.tsx","domain/Post/index.tsx","domain/Sidebar/index.tsx","domain/Main/index.tsx","domain/About/index.tsx","domain/Blog/index.tsx","domain/Drawer/index.tsx","utils/theme.ts","domain/NavMenu/index.tsx","domain/Header/index.tsx","domain/Footer/index.tsx","domain/Layout/index.tsx","components/App/App.tsx","reportWebVitals.ts","store/Accounts.ts","store/index.ts","registerServiceWorker.ts","index.tsx","store/configureStore.ts"],"names":["MainFeaturedPost","props","post","Paper","sx","position","backgroundColor","color","mb","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","image","style","display","src","alt","imageText","Box","top","bottom","right","left","Grid","container","item","md","p","xs","pr","Typography","component","variant","gutterBottom","title","paragraph","description","Link","href","linkText","FeaturedPost","CardActionArea","Card","CardContent","flex","date","CardMedia","width","sm","imageLabel","JObject","children","author","bgcolor","py","Post","posts","Divider","default","map","className","id","Sidebar","archives","social","elevation","mt","archive","url","network","Stack","direction","spacing","alignItems","icon","name","mainFeaturedPost","featuredPosts","sidebar","GitHubIcon","TwitterIcon","FacebookIcon","theme","createTheme","Main","ThemeProvider","CssBaseline","Container","maxWidth","About","Blog","useStyles","makeStyles","link","textDecoration","fontSize","paper","DrawerComponent","classes","useState","openDrawer","setOpenDrawer","Drawer","open","onClose","List","ListItem","onClick","ListItemText","to","IconButton","white1","white2","thunderCloud","waterfall","moss","meadow","blue3","blue4","blue5","blue6","black1","grey1","grey2","grey3","grey4","grey5","grey6","grey7","grey8","grey9","grey10","grey11","grey12","red1","navlinks","marginRight","marginLeft","borderBottom","background","px","logo","flexGrow","cursor","NavMenu","themes","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","marginBottom","Toolbar","Header","Copyright","align","Date","getFullYear","Footer","Layout","this","React","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","unloadedState","account","email","reducers","state","incomingAction","undefined","type","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","history","createBrowserHistory","basename","store","initialState","middleware","thunk","routerMiddleware","rootReducer","combineReducers","router","connectRouter","enhancers","windowIfDefined","__REDUX_DEVTOOLS_EXTENSION__","push","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById","URL","process","toString","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qWAiBe,SAASA,EAAiBC,GACvC,IAAQC,EAASD,EAATC,KAER,OACE,eAACC,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,WACVC,gBAAiB,WACjBC,MAAO,OACPC,GAAI,EACJC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAgB,OAAD,OAASV,EAAKW,MAAd,MATnB,UAaG,qBAAKC,MAAO,CAAEC,QAAS,QAAUC,IAAKd,EAAKW,MAAOI,IAAKf,EAAKgB,YAC7D,cAACC,EAAA,EAAD,CACEf,GAAI,CACFC,SAAU,WACVe,IAAK,EACLC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNjB,gBAAiB,oBAGrB,cAACkB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,eAACR,EAAA,EAAD,CACEf,GAAI,CACFC,SAAU,WACVuB,EAAG,CAAEC,GAAI,EAAGF,GAAI,GAChBG,GAAI,CAAEH,GAAI,IAJd,UAOE,cAACI,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAK1B,MAAM,UAAU2B,cAAY,EAApE,SACGhC,EAAKiC,QAER,cAACJ,EAAA,EAAD,CAAYE,QAAQ,KAAK1B,MAAM,UAAU6B,WAAS,EAAlD,SACGlC,EAAKmC,cAER,cAACC,EAAA,EAAD,CAAML,QAAQ,YAAYM,KAAK,IAA/B,SACGrC,EAAKsC,qB,wCC3CL,SAASC,EAAaxC,GACnC,IAAQC,EAASD,EAATC,KAER,OACE,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAvB,SACE,cAACe,EAAA,EAAD,CAAgBV,UAAU,IAAIO,KAAK,IAAnC,SACE,eAACI,EAAA,EAAD,CAAMvC,GAAI,CAAEW,QAAS,QAArB,UACE,eAAC6B,EAAA,EAAD,CAAaxC,GAAI,CAAEyC,KAAM,GAAzB,UACE,cAACd,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SACG/B,EAAKiC,QAER,cAACJ,EAAA,EAAD,CAAYE,QAAQ,YAAY1B,MAAM,iBAAtC,SACGL,EAAK4C,OAER,cAACf,EAAA,EAAD,CAAYE,QAAQ,YAAYG,WAAS,EAAzC,SACGlC,EAAKmC,cAER,cAACN,EAAA,EAAD,CAAYE,QAAQ,YAAY1B,MAAM,UAAtC,oCAIF,cAACwC,EAAA,EAAD,CACEf,UAAU,MACV5B,GAAI,CAAE4C,MAAO,IAAKjC,QAAS,CAAEc,GAAI,OAAQoB,GAAI,UAC7CpC,MAAOX,EAAKW,MACZI,IAAKf,EAAKgD,oB,aCvCP,SAASC,EAAQlD,GAC9B,MAA2CA,EAAMmD,SAA3CC,EAAN,EAAMA,OAAQhB,EAAd,EAAcA,YAAaF,EAA3B,EAA2BA,MAAOW,EAAlC,EAAkCA,KAClC,OACE,eAAC3B,EAAA,EAAD,CAAKf,GAAI,CAAEkD,QAAS,mBAAoBC,GAAI,GAA5C,UACE,cAACxB,EAAA,EAAD,CAAYG,cAAY,EAACD,QAAQ,KAAKD,UAAU,KAAhD,SACGG,IAEH,eAACJ,EAAA,EAAD,CAAYG,cAAY,EAACD,QAAQ,UAAjC,UACGa,EADH,OACaO,KAEb,cAACtB,EAAA,EAAD,CAAYG,cAAY,EAACD,QAAQ,KAAjC,SACGI,OCJM,SAASmB,EAAKvD,GAC3B,IAAQwD,EAAiBxD,EAAjBwD,MAAOtB,EAAUlC,EAAVkC,MACf,OACE,eAACX,EAAA,EAAD,CACEE,MAAI,EACJG,GAAI,GACJF,GAAI,EAHN,UAKE,cAACI,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,EAArC,SACGC,IAEH,cAACuB,EAAA,EAAD,IACCD,EAAME,QAAQF,MAAMG,KAAI,SAAC1D,GAAD,OAEvB,aADA,CACCiD,EAAD,CAASU,UAAU,WAAnB,SACG3D,GADgCA,EAAK4D,U,aCLjC,SAASC,EAAQ9D,GAC9B,IAAQ+D,EAAyC/D,EAAzC+D,SAAU3B,EAA+BpC,EAA/BoC,YAAa4B,EAAkBhE,EAAlBgE,OAAQ9B,EAAUlC,EAAVkC,MAEvC,OACE,eAACX,EAAA,EAAD,CAAME,MAAI,EAACG,GAAI,GAAIF,GAAI,EAAvB,UACE,eAACxB,EAAA,EAAD,CAAO+D,UAAW,EAAG9D,GAAI,CAAEwB,EAAG,EAAG0B,QAAS,YAA1C,UACE,cAACvB,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,EAArC,SACGC,IAEH,cAACJ,EAAA,EAAD,UAAaM,OAEf,cAACN,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,EAAC9B,GAAI,CAAE+D,GAAI,GAAhD,sBAGCH,EAASJ,KAAI,SAACQ,GAAD,OACZ,cAAC9B,EAAA,EAAD,CAAMvB,QAAQ,QAAQkB,QAAQ,QAAQM,KAAM6B,EAAQC,IAApD,SACGD,EAAQjC,OADmDiC,EAAQjC,UAIxE,cAACJ,EAAA,EAAD,CAAYE,QAAQ,KAAKC,cAAY,EAAC9B,GAAI,CAAE+D,GAAI,GAAhD,oBAGCF,EAAOL,KAAI,SAACU,GAAD,OACV,cAAChC,EAAA,EAAD,CACEvB,QAAQ,QACRkB,QAAQ,QACRM,KAAK,IAELnC,GAAI,CAAEI,GAAI,IALZ,SAOE,eAAC+D,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGC,WAAW,SAA9C,UACE,cAACJ,EAAQK,KAAT,IACA,+BAAOL,EAAQM,WALZN,EAAQM,Y,uBCjCjBC,EAAmB,CACvB1C,MAAO,uCACPE,YACE,kJACFxB,MAAO,oCACPK,UAAW,4BACXsB,SAAU,0BAGNsC,EAAgB,CACpB,CACE3C,MAAO,gBACPW,KAAM,SACNT,YACE,8FACFxB,MAAO,qCACPqC,WAAY,8BAEd,CACEf,MAAO,aACPW,KAAM,SACNT,YACE,8FACFxB,MAAO,qCACPqC,WAAY,+BAIV6B,EAAU,CACd5C,MAAO,QACPE,YACE,2LACF2B,SAAU,CACR,CAAE7B,MAAO,aAAckC,IAAK,KAC5B,CAAElC,MAAO,gBAAiBkC,IAAK,KAC/B,CAAElC,MAAO,eAAgBkC,IAAK,MAEhCJ,OAAQ,CACN,CAAEW,KAAM,SAAUD,KAAMK,KACxB,CAAEJ,KAAM,UAAWD,KAAMM,KACzB,CAAEL,KAAM,WAAYD,KAAMO,OAIxBC,EAAQC,cAEC,SAASC,IACtB,OACE,eAACC,EAAA,EAAD,CAAeH,MAAOA,EAAtB,UACE,cAACI,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,iCACE,cAACzF,EAAD,CAAkBE,KAAM2E,IACxB,cAACrD,EAAA,EAAD,CAAMC,WAAS,EAACgD,QAAS,EAAzB,SACGK,EAAclB,KAAI,SAAC1D,GAAD,OACjB,cAACuC,EAAD,CAA+BvC,KAAMA,GAAlBA,EAAKiC,YAG5B,eAACX,EAAA,EAAD,CAAMC,WAAS,EAACgD,QAAS,EAAGrE,GAAI,CAAE+D,GAAI,GAAtC,UACE,cAACX,EAAD,CAAMrB,MAAM,aAAasB,MAAOA,IAChC,cAACM,EAAD,CACE5B,MAAO4C,EAAQ5C,MACfE,YAAa0C,EAAQ1C,YACrB2B,SAAUe,EAAQf,SAClBC,OAAQc,EAAQd,oBC9Ef,SAASyB,IACpB,OACC,8BACI,wDCAM,SAASC,IACpB,OACC,8BACI,cAACnC,EAAD,CAAMrB,MAAM,aAAasB,MAAOA,M,gKCOnCmC,GAAYC,cAAW,iBAAO,CACnCC,KAAM,CACLC,eAAgB,OAChBxF,MAAO,OACPyF,SAAU,QAEXrB,KAAM,CACLpE,MAAO,SAER0F,MAAO,CACJjD,MAAO,SA0CIkD,OAtCf,WACC,IAAMC,EAAUP,KAChB,EAAoCQ,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,OACC,qCACC,cAACC,EAAA,EAAD,CACCC,KAAMH,EACNI,QAAS,kBAAMH,GAAc,IAC7BH,QAAS,CAACF,MAAOE,EAAQF,OAH1B,SAKC,eAACS,EAAA,EAAD,WACC,cAACC,GAAA,EAAD,CAAUC,QAAS,kBAAMN,GAAc,IAAvC,SACC,cAACO,GAAA,EAAD,UACC,cAAC,IAAD,CAAMC,GAAG,QAAQjD,UAAWsC,EAAQL,KAApC,sBAGF,cAACpC,EAAA,EAAD,IACA,cAACiD,GAAA,EAAD,CAAUC,QAAS,kBAAMN,GAAc,IAAvC,SACC,cAACO,GAAA,EAAD,UACC,cAAC,IAAD,CAAMC,GAAG,QAAQjD,UAAWsC,EAAQL,KAApC,sBAGF,cAACpC,EAAA,EAAD,IACA,cAACiD,GAAA,EAAD,CAAUC,QAAS,kBAAMN,GAAc,IAAvC,SACC,cAACO,GAAA,EAAD,UACC,cAAC,IAAD,CAAMC,GAAG,SAASjD,UAAWsC,EAAQL,KAArC,uBAGF,cAACpC,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,SAGF,cAACqD,GAAA,EAAD,CAAYH,QAAS,kBAAMN,GAAeD,IAAaxC,UAAWsC,EAAQxB,KAA1E,SACC,cAAC,KAAD,U,SC5DSQ,GAEF,CACL6B,OAAQ,UACRC,OAAQ,UACRC,aAAc,UACdC,UAAW,UACXC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,KAAM,WCZN3C,GAAYC,cAAW,iBAAO,CAClC2C,SAAU,CACRC,YAAa,EACb1H,QAAS,QAEX+E,KAAM,CACJC,eAAgB,OAChBxF,MAAO,QACPyF,SAAU,OACV0C,WAAY,GACZ,UAAW,CACTnI,MAAO,SACPoI,aAAc,kBACdC,WAAY,OACZC,GAAI,KAGRC,KAAM,CACJC,SAAU,EACVC,OAAQ,eAmCGC,OA/Bf,WACE,IAAM9C,EAAUP,KACVsD,EAASC,eACTC,EAAWC,YAAcH,EAAOI,YAAYC,KAAK,OAEvD,OACE,eAACC,EAAA,EAAD,CAAQnJ,SAAS,SAASD,GAAI,CAAEqJ,aAAc,EAAGnG,QAAS6B,GAAY+B,cAAtE,UACE,cAAC3B,EAAA,EAAD,IACA,eAACmE,EAAA,EAAD,WACE,cAAC3H,EAAA,EAAD,CAAYE,QAAQ,KAAK4B,UAAWsC,EAAQ2C,KAA5C,kBAGCM,EACE,cAAC,GAAD,IAED,sBAAKvF,UAAWsC,EAAQqC,SAAxB,UACE,cAAC,IAAD,CAAM1B,GAAG,IAAIjD,UAAWsC,EAAQL,KAAhC,kBAGA,cAAC,IAAD,CAAMgB,GAAG,QAAQjD,UAAWsC,EAAQL,KAApC,kBAGA,cAAC,IAAD,CAAMgB,GAAG,SAASjD,UAAWsC,EAAQL,KAArC,6BCpDG,SAAS6D,GAAO1J,GAE7B,OACE,cAAC,WAAD,UACE,wBAAQ,gBAAc,MAAtB,SACE,cAAC,GAAD,QCNR,SAAS2J,KACP,OACE,eAAC7H,EAAA,EAAD,CAAYE,QAAQ,QAAQ1B,MAAM,iBAAiBsJ,MAAM,SAAzD,UACG,kBACD,cAACvH,EAAA,EAAD,CAAM/B,MAAM,UAAUgC,KAAK,iCAA3B,uBAEQ,UACP,IAAIuH,MAAOC,cACX,OAUQ,SAASC,GAAO/J,GAC7B,IAAQoC,EAAuBpC,EAAvBoC,YAAaF,EAAUlC,EAAVkC,MAErB,OACE,cAAChB,EAAA,EAAD,CAAKa,UAAU,SAAS5B,GAAI,CAAEkD,QAAS6B,GAAYgC,UAAW5D,GAAI,GAAlE,SACE,eAACiC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC1D,EAAA,EAAD,CAAYE,QAAQ,KAAK4H,MAAM,SAAS3H,cAAY,EAApD,SACGC,IAEH,cAACJ,EAAA,EAAD,CACEE,QAAQ,YACR4H,MAAM,SACNtJ,MAAM,iBACNyB,UAAU,IAJZ,SAMGK,IAEH,cAACuH,GAAD,S,ICpCaK,G,4JACnB,WACE,OACE,eAAC,WAAD,WACE,cAACN,GAAD,CAAQxH,MAAM,iBACd,cAACqD,EAAA,EAAD,UACG0E,KAAKjK,MAAMmD,WAEd,cAAC4G,GAAD,CACE7H,MAAM,GACNE,YAAY,Y,GAVc8H,iB,SCgBrBC,OAZf,WACE,OACE,qBAAKvG,UAAU,MAAf,SACE,eAAC,GAAD,WACI,cAAC,KAAD,CAAOwG,OAAK,EAACC,KAAK,IAAItI,UAAWqD,IACjC,cAAC,KAAD,CAAOiF,KAAK,QAAQtI,UAAW2D,IAC/B,cAAC,KAAD,CAAO2E,KAAK,SAAStI,UAAW0D,UCD3B6E,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uDCgDRQ,I,aAA8B,CAAEC,QANjB,CACnBnH,GAAI,GACJc,KAAM,GACNsG,MAAO,MC5CIC,GAAW,CACtBF,QDgD4C,SAACG,EAAiCC,GAC9E,YAAcC,IAAVF,EACKJ,GAKF,gBAFQK,EACAE,KAIF,gBACFH,GAIJA,IEhET,IAAMI,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8BJ,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTrB,MAAK,SAAAyB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjB,QACfY,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,M,aC5D3DC,GAAUC,aAAqB,CAAEC,SAAU,KAC3CC,GCNS,SAAwBH,EAAkBI,GACvD,IAAMC,EAAa,CACjBC,KACAC,aAAiBP,IAGbQ,EAAcC,aAAgB,6BAC/BnC,IAD8B,IAEjCoC,OAAQC,aAAcX,MAGlBY,EAAY,GACZC,EAAoC,qBAAXhC,OAAyB,KAAOA,OAK/D,OAJIgC,GAAmBA,EAAgBC,8BACrCF,EAAUG,KAAKF,EAAgBC,gCAG1BE,aACLR,EAEAS,KAAO,WAAP,GAAQC,KAAe,WAAf,EAAmBb,IAA3B,OAA2CO,KDdjCO,CAAenB,IAE7BoB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,KAAD,CAAUnB,MAAOA,GAAjB,SACC,cAAC,KAAD,CAAiBH,QAASA,GAA1B,SACC,cAAC,GAAD,UAIHuB,SAASC,eAAe,SDFV,WACb,GAA6C,kBAAmBrC,UAAW,CAIzE,GADkB,IAAIsC,IADVC,GACmB7C,OAAOC,SAAS6C,YACjCC,SAAW/C,OAAOC,SAAS8C,OAIvC,OAGF/C,OAAOgD,iBAAiB,QAAQ,WAC9B,IAAM3C,EAAK,UAAMwC,GAAN,sBAEP/C,GAwCV,SAAiCO,GAE/B4C,MAAM5C,GACHrB,MAAK,SAAAkE,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBACjB,MAApBH,EAASI,QAAmBH,IAAsD,IAAvCA,EAAYI,QAAQ,cAEjEjD,UAAUC,cAAciD,MAAMxE,MAAK,SAAAyB,GACjCA,EAAagD,aAAazE,MAAK,WAC7BgB,OAAOC,SAASyD,eAKpBtD,GAAgBC,MAGnBY,OAAM,WACLF,QAAQC,IAAI,oEAzDV2C,CAAwBtD,GAGxBD,GAAgBC,OCZxBuD,GACA/E,M","file":"static/js/main.8ec754e7.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport Box from '@mui/material/Box';\r\n\r\ninterface MainFeaturedPostProps {\r\n  post: {\r\n    description: string;\r\n    image: string;\r\n    imageText: string;\r\n    linkText: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nexport default function MainFeaturedPost(props: MainFeaturedPostProps) {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        position: 'relative',\r\n        backgroundColor: 'grey.800',\r\n        color: '#fff',\r\n        mb: 4,\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n        backgroundImage: `url(${post.image})`,\r\n      }}\r\n    >\r\n      {/* Increase the priority of the hero background image */}\r\n      {<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          bottom: 0,\r\n          right: 0,\r\n          left: 0,\r\n          backgroundColor: 'rgba(0,0,0,.3)',\r\n        }}\r\n      />\r\n      <Grid container>\r\n        <Grid item md={6}>\r\n          <Box\r\n            sx={{\r\n              position: 'relative',\r\n              p: { xs: 3, md: 6 },\r\n              pr: { md: 0 },\r\n            }}\r\n          >\r\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n              {post.title}\r\n            </Typography>\r\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n              {post.description}\r\n            </Typography>\r\n            <Link variant=\"subtitle1\" href=\"#\">\r\n              {post.linkText}\r\n            </Link>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}","import * as React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport Card from '@mui/material/Card';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\ninterface FeaturedPostProps {\r\n  post: {\r\n    date: string;\r\n    description: string;\r\n    image: string;\r\n    imageLabel: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nexport default function FeaturedPost(props: FeaturedPostProps) {\r\n  const { post } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={6}>\r\n      <CardActionArea component=\"a\" href=\"#\">\r\n        <Card sx={{ display: 'flex' }}>\r\n          <CardContent sx={{ flex: 1 }}>\r\n            <Typography component=\"h2\" variant=\"h5\">\r\n              {post.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n              {post.date}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" paragraph>\r\n              {post.description}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"primary\">\r\n              Continue reading...\r\n            </Typography>\r\n          </CardContent>\r\n          <CardMedia\r\n            component=\"img\"\r\n            sx={{ width: 160, display: { xs: 'none', sm: 'block' } }}\r\n            image={post.image}\r\n            alt={post.imageLabel}\r\n          />\r\n        </Card>\r\n      </CardActionArea>\r\n    </Grid>\r\n  );\r\n}\r\n","\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function JObject(props: any) {\r\n  let { author, description, title, date } = props.children;\r\n  return (\r\n    <Box sx={{ bgcolor: 'background.paper', py: 2 }}>\r\n      <Typography gutterBottom variant=\"h4\" component=\"h1\">\r\n        {title}\r\n      </Typography>\r\n      <Typography gutterBottom variant=\"caption\">\r\n        {date} by {author}\r\n      </Typography>\r\n      <Typography gutterBottom variant=\"h6\">\r\n        {description}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport JObject from '../JObject';\r\n\r\ninterface MainProps {\r\n  posts: any;\r\n  title: string;\r\n}\r\n\r\nexport default function Post(props: MainProps) {\r\n  const { posts, title } = props;\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      md={8}\r\n    >\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Divider />\r\n      {posts.default.posts.map((post: any) => (\r\n        // change classname\r\n        <JObject className=\"markdown\" key={post.id} >\r\n          {post}\r\n        </JObject>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Paper from '@mui/material/Paper';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\n\r\ninterface SidebarProps {\r\n  archives: ReadonlyArray<{\r\n    url: string;\r\n    title: string;\r\n  }>;\r\n  description: string;\r\n  social: ReadonlyArray<{\r\n    icon: React.ElementType;\r\n    name: string;\r\n  }>;\r\n  title: string;\r\n}\r\n\r\nexport default function Sidebar(props: SidebarProps) {\r\n  const { archives, description, social, title } = props;\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Paper elevation={0} sx={{ p: 2, bgcolor: 'grey.200' }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography>{description}</Typography>\r\n      </Paper>\r\n      <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\r\n        Archives\r\n      </Typography>\r\n      {archives.map((archive) => (\r\n        <Link display=\"block\" variant=\"body1\" href={archive.url} key={archive.title}>\r\n          {archive.title}\r\n        </Link>\r\n      ))}\r\n      <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\r\n        Social\r\n      </Typography>\r\n      {social.map((network) => (\r\n        <Link\r\n          display=\"block\"\r\n          variant=\"body1\"\r\n          href=\"#\"\r\n          key={network.name}\r\n          sx={{ mb: 0.5 }}\r\n        >\r\n          <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <network.icon />\r\n            <span>{network.name}</span>\r\n          </Stack>\r\n        </Link>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}","import * as React from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport MainFeaturedPost from '../MainFeaturedPost';\r\nimport FeaturedPost from '../FeaturedPost';\r\nimport Post from '../Post';\r\nimport Sidebar from '../Sidebar';\r\nimport * as posts from '../../utils/posts.json';\r\n\r\nconst mainFeaturedPost = {\r\n  title: 'Title of a longer featured blog post',\r\n  description:\r\n    \"Multiple lines of text that form the lede, informing new readers quickly and efficiently about what's most interesting in this post's contents.\",\r\n  image: 'https://source.unsplash.com/daily',\r\n  imageText: 'Daily photo from Unsplash',\r\n  linkText: 'Continue reading…',\r\n};\r\n\r\nconst featuredPosts = [\r\n  {\r\n    title: 'Featured post',\r\n    date: 'Nov 12',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    image: 'https://source.unsplash.com/weekly',\r\n    imageLabel: 'Weekly photo from Unsplash',\r\n  },\r\n  {\r\n    title: 'Post title',\r\n    date: 'Nov 11',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    image: 'https://source.unsplash.com/weekly',\r\n    imageLabel: 'Weekly photo from Unsplash',\r\n  },\r\n];\r\n\r\nconst sidebar = {\r\n  title: 'About',\r\n  description:\r\n    'This is a webpage that I built for two main reasons. Firstly because I wanted to avance my frontend skills by using TypeScript and React and secondly in attempt to built my portofolio.',\r\n  archives: [\r\n    { title: 'March 2020', url: '#' },\r\n    { title: 'February 2020', url: '#' },\r\n    { title: 'January 2020', url: '#' },\r\n  ],\r\n  social: [\r\n    { name: 'GitHub', icon: GitHubIcon },\r\n    { name: 'Twitter', icon: TwitterIcon },\r\n    { name: 'Facebook', icon: FacebookIcon },\r\n  ],\r\n};\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Main() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <main>\r\n          <MainFeaturedPost post={mainFeaturedPost} />\r\n          <Grid container spacing={4}>\r\n            {featuredPosts.map((post) => (\r\n              <FeaturedPost key={post.title} post={post} />\r\n            ))}\r\n          </Grid>\r\n          <Grid container spacing={5} sx={{ mt: 3 }}>\r\n            <Post title=\"Main posts\" posts={posts} />\r\n            <Sidebar\r\n              title={sidebar.title}\r\n              description={sidebar.description}\r\n              archives={sidebar.archives}\r\n              social={sidebar.social}\r\n            />\r\n          </Grid>\r\n        </main>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","export default function About() {\r\n    return (\r\n     <div>\r\n         <p>Welcome to About Page</p>\r\n     </div>\r\n    );\r\n  }","import Post from '../Post';\r\nimport * as posts from '../../utils/posts.json';\r\n\r\nexport default function Blog() {\r\n    return (\r\n     <div>\r\n         <Post title=\"Blog Posts\" posts={posts} />\r\n     </div>\r\n    );\r\n  }","import React, { useState } from \"react\";\r\nimport {\r\n\tDivider,\r\n\tDrawer,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\tlink: {\r\n\t\ttextDecoration: \"none\",\r\n\t\tcolor: \"blue\",\r\n\t\tfontSize: \"20px\",\r\n\t},\r\n\ticon: {\r\n\t\tcolor: \"white\"\r\n\t},\r\n\tpaper: {\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction DrawerComponent() {\r\n\tconst classes = useStyles();\r\n\tconst [openDrawer, setOpenDrawer] = useState(false);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Drawer\r\n\t\t\t\topen={openDrawer}\r\n\t\t\t\tonClose={() => setOpenDrawer(false)}\r\n\t\t\t\tclasses={{paper: classes.paper}}\r\n\t\t\t>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t<ListItem onClick={() => setOpenDrawer(false)}>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Link to=\"/home\" className={classes.link}>Home</Link>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<ListItem onClick={() => setOpenDrawer(false)}>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Link to=\"/blog\" className={classes.link}>Blog</Link>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<ListItem onClick={() => setOpenDrawer(false)}>\r\n\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t<Link to=\"/about\" className={classes.link}>About</Link>\r\n\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t\t<IconButton onClick={() => setOpenDrawer(!openDrawer)} className={classes.icon}>\r\n\t\t\t\t<MenuIcon />\r\n\t\t\t</IconButton>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default DrawerComponent;","export const theme = {\r\n    fontFamily: \"font-family: 'Barlow', sans-serif;\",\r\n    color: {\r\n      white1: \"#FFFFFF\",\r\n      white2: \"#F3F3F3\",\r\n      thunderCloud: \"#505160\",\r\n      waterfall: \"#68829e\",\r\n      moss: \"#aebd38\",\r\n      meadow: \"#598234\",\r\n      blue3: \"#4F68A1\", // Facebook blue\r\n      blue4: \"#66B3EF\", // Twitter blue\r\n      blue5: \"#1984BC\", // Linkedin blue\r\n      blue6: \"#488DDF\", // Hover blue\r\n      black1: \"#333333\",\r\n      grey1: \"#BFBFBF\",\r\n      grey2: \"#DFDFDF\",\r\n      grey3: \"#E7E7E7\",\r\n      grey4: \"#8B8B8B\",\r\n      grey5: \"#D9D9D9\",\r\n      grey6: \"#F9F9F9\",\r\n      grey7: \"#A2A1A1\",\r\n      grey8: \"#C8C8C8\",\r\n      grey9: \"#B5B5B5\",\r\n      grey10: \"#808080\",\r\n      grey11: \"#979797\",\r\n      grey12: \"#FAFAFA\",\r\n      red1: \"#C93838\",\r\n    },\r\n  };\r\n  \r\n  export type Theme = typeof theme;","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  CssBaseline,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DrawerComponent from \"../Drawer\";\r\nimport { makeStyles } from '@mui/styles';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { theme } from \"../../utils/theme\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  navlinks: {\r\n    marginRight: 3,\r\n    display: \"flex\",\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"white\",\r\n    fontSize: \"20px\",\r\n    marginLeft: 35,\r\n    \"&:hover\": {\r\n      color: \"orange\",\r\n      borderBottom: \"1px solid white\",\r\n      background: \"gray\",\r\n      px: 15,\r\n    },\r\n  },\r\n  logo: {\r\n    flexGrow: 1,\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nfunction NavMenu() {\r\n  const classes = useStyles();\r\n  const themes = useTheme();\r\n  const isMobile = useMediaQuery(themes.breakpoints.down(\"md\"));\r\n\r\n  return (\r\n    <AppBar position=\"static\" sx={{ marginBottom: 1, bgcolor: theme.color.thunderCloud }}>\r\n      <CssBaseline />\r\n      <Toolbar>\r\n        <Typography variant=\"h4\" className={classes.logo}>\r\n          Demo\r\n        </Typography>\r\n        {isMobile ? (\r\n           <DrawerComponent />\r\n        ) : (\r\n          <div className={classes.navlinks}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              Home\r\n            </Link>\r\n            <Link to=\"/blog\" className={classes.link}>\r\n              Blog\r\n            </Link>\r\n            <Link to=\"/about\" className={classes.link}>\r\n              About\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default NavMenu;","import * as React from 'react';\r\nimport NavMenu from \"../NavMenu\";\r\n\r\ninterface HeaderProps {\r\n  title: string;\r\n}\r\n\r\nexport default function Header(props: HeaderProps) {\r\n  // const { sections, title } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <header margin-bottom=\"1em\">\r\n        <NavMenu />\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n}","import Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport Link from '@mui/material/Link';\r\nimport { theme } from \"../../utils/theme\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://ertolv.github.io/home/\">\r\n        erTölv\r\n      </Link>{' 2006-'}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\ninterface FooterProps {\r\n  description: string;\r\n  title: string;\r\n}\r\n\r\nexport default function Footer(props: FooterProps) {\r\n  const { description, title } = props;\r\n\r\n  return (\r\n    <Box component=\"footer\" sx={{ bgcolor: theme.color.waterfall, py: 2, }}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"text.secondary\"\r\n          component=\"p\"\r\n        >\r\n          {description}\r\n        </Typography>\r\n        <Copyright />\r\n      </Container>\r\n    </Box>\r\n  );\r\n}","import * as React from 'react';\r\nimport { Container } from '@mui/material';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\n\r\nexport default class Layout extends React.PureComponent<{}, { children?: React.ReactNode }> {\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header title=\"Demo Website\" />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n        <Footer\r\n          title=\"\"\r\n          description=\"\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}","import * as React from 'react';\nimport './App.css';\nimport Main from '../../domain/Main';\nimport About from '../../domain/About';\nimport Blog from '../../domain/Blog';\nimport Layout from '../../domain/Layout';\nimport { Route } from 'react-router';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n          <Route exact path='/' component={Main} />\n          <Route path='/blog' component={Blog} />\n          <Route path='/about' component={About} />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action, Reducer } from 'redux';\r\nimport { AppThunkAction } from '.';\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface AccountState {\r\n  account: Account;\r\n}\r\n\r\nexport interface Account {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n\r\n\r\ninterface GetAccountAction {\r\n  type: 'GET_ACCOUNT';\r\n  account: Account;\r\n}\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction = GetAccountAction;\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n  requestAccount: (): AppThunkAction<KnownAction> => async (dispatch, getState) => {\r\n    // Only load data if it's something we don't already have (and are not already loading)\r\n    const appState = getState();\r\n    if (appState && appState.account) {\r\n      try {\r\n        console.log(\"At: store/account.ts\")\r\n        dispatch({ type: 'GET_ACCOUNT', account: { id: \"1\", name: \"string\", email: \"string\" } })\r\n      } catch (err) {\r\n        console.log('Bad request, please try loading again.')\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\nconst emptyAccount = {\r\n  id: \"\",\r\n  name: \"\",\r\n  email: \"\"\r\n}\r\n\r\nconst unloadedState: AccountState = { account: emptyAccount };\r\n\r\nexport const reducer: Reducer<AccountState> = (state: AccountState | undefined, incomingAction: Action): AccountState => {\r\n  if (state === undefined) {\r\n    return unloadedState;\r\n  }\r\n\r\n  const action = incomingAction as KnownAction;\r\n  switch (action.type) {\r\n    case 'GET_ACCOUNT':\r\n      // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n      // handle out-of-order responses.\r\n        return {\r\n          ...state\r\n        };\r\n  }\r\n\r\n  return state;\r\n};","import * as Account from './Accounts';\r\n\r\n// The top-level state object\r\nexport interface ApplicationState {\r\n  account: Account.Account | undefined;\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n  account: Account.reducer\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n  (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and participants)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const url = process.env.PUBLIC_URL as string;\r\n    const publicUrl = new URL(url, window.location.toString());\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing as ServiceWorker;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (response.status === 404 || (contentType && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport configureStore from './store/configureStore';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\n\nconst history = createBrowserHistory({ basename: '' });\nconst store = configureStore(history);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t<App />\n\t\t\t</ConnectedRouter>\n\t\t</Provider>\n\t</React.StrictMode >,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nregisterServiceWorker();\nreportWebVitals();\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { History } from 'history';\r\nimport { ApplicationState, reducers } from './';\r\n\r\nexport default function configureStore(history: History, initialState?: ApplicationState) {\r\n  const middleware = [\r\n    thunk,\r\n    routerMiddleware(history)\r\n  ];\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    router: connectRouter(history)\r\n  });\r\n\r\n  const enhancers = [];\r\n  const windowIfDefined = typeof window === 'undefined' ? null : window as any; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n  if (windowIfDefined && windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__) {\r\n    enhancers.push(windowIfDefined.__REDUX_DEVTOOLS_EXTENSION__());\r\n  }\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    // initialState,\r\n    compose(applyMiddleware(...middleware), ...enhancers)\r\n  );\r\n}"],"sourceRoot":""}